import fs from 'fs'
import path from 'path'
import { error } from './error'
import { PackageJSON } from './types'

export const output = (KEYS: string[], FILENAME: string, json: PackageJSON, isESM: boolean, testing = true) => {
  const dirname = path.dirname(FILENAME)
  const packagePath = path.resolve(`./${FILENAME}`)

  let output = testing ? `` : `// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.\n`

  const prepareOutput = (key: string) => {
    let value: any = json[key]
    const keys = key.split('.')

    if (keys.length >= 2) {
      key = keys[keys.length - 1]
      value = json[keys.shift() as string]

      keys.forEach(key => {
        value = value[`${key}`]
      })
    }

    // (\w = [a-zA-Z0-9_])
    key = key.toUpperCase() // to uppercase
    key = key.replace(/[-\s\\\/@]/gm, '_') // replace - space \ / and @ with _
    key = key.replace(/[^\w]/gm, '') // remove all special characters

    value = JSON.stringify(value, null, 2)

    const esm = `export const ${key} = ${value}`
    const cjs = `exports.${key} = ${value}`

    return isESM ? esm : cjs
  }

  KEYS.forEach(key => {
    output += prepareOutput(key) + `\n`
  })

  if (testing) {
    return { path: packagePath, output }
  }

  fs.mkdir(path.resolve(dirname), { recursive: true }, err => {
    if (err) error()

    fs.writeFile(packagePath, output, err => {
      if (err) error()
      process.exit(0)
    })
  })
}
